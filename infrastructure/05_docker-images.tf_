/* resource "google_artifact_registry_repository" "docker_repo" {
  provider      = google-beta
  location      = var.region
  repository_id = "docker-repo"
}
 */

# Create of a Google Cloud service account to manage the docker repo in thr artifact registry
resource "google_service_account" "docker_repo" {
  account_id   = "docker-repo"
  display_name = "Docker Repository"
}

# Add the above created service account as a member to the IAM policy for the artifact repository giving it writing access
resource "google_artifact_registry_repository_iam_member" "docker_repo" {
  provider   = google-beta
  location   = var.region
  repository = "docker-repo"
  role       = "roles/artifactregistry.writer"
  member     = "serviceAccount:${google_service_account.docker_repo.email}"
}



###############################################################################
# Creation of Docker images for the different project applications
#####

/* # Retrieve the data from the service account for the docker repo
data "google_service_account" "docker_repo" {
  account_id = "docker-repo"
}
 */
# Create an access token for the service account created fo accessing the docker repository
data "google_service_account_access_token" "docker_repo" {
  target_service_account = google_service_account.docker_repo.email
  scopes                 = ["cloud-platform"]
}

provider "docker" {
  #host = "https://${var.region}-docker.pkg.dev"
  registry_auth {
    address  = "${var.region}-docker.pkg.dev"
    username = "oauth2accesstoken"
    password = data.google_service_account_access_token.docker_repo.access_token
  }
}

resource "docker_registry_image" "keycloak_image" {
  name = "${var.region}-docker.pkg.dev/${var.project_id}/docker-repo/keycloak:staging"

  build {
    context = "https://github.com/edu-hub-project/application/tree/staging"
  }
}


/*   
  build:
    name: Build the Docker Image
    uses: ./.github/workflows/build-docker-image.yml
    with:
      # Folder with the Dockerfile that is used for creating the image
      DOCKERFILE_FOLDER: backend
      # Name for the docker image
      IMAGE_NAME: edu_hub_backend
      # Name of the branch that triggered the workflow run
      BRANCH: ${{ github.ref }}
      # ID of the project in Google in which the image will be stored and deployed
      PROJECT_ID: edu-hub-staging
    secrets:
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_STAGING }}
      GCP_REGION: ${{ secrets.GCP_REGION }}

docker build ./${{ inputs.DOCKERFILE_FOLDER }} --file ./${{ inputs.DOCKERFILE_FOLDER }}/Dockerfile --tag ${{ inputs.IMAGE_NAME }} --label "runnumber=${GITHUB_RUN_ID}" */

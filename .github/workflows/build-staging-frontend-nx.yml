name: Setup Staging Environment
on:
  push:
    # Run only on changes in the following branches
    branches:
      - infrastructure/deployment-of-nx-frontend

env:
  TF_WORKSPACE: eduhub-application-staging
  TF_WORKSPACE_ID: ws-wVwkztBCRbphphYw
  TF_VAR_ID_COMMIT_SHA: var-sSiBMg7YBPL7NcFh

jobs:
  save-commit-sha:
    name: Save SHA of current commit in Terraform Cloud
    runs-on: ubuntu-latest
    steps:
      - name: Check Out the Repository Branch
        uses: actions/checkout@v3
      - name: Save commit SHA in Terraform Cloud variable
        run: |
          curl \
          --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          --header "Content-Type: application/vnd.api+json" \
          --request PATCH \
          --data "{ \"data\": { \"id\":\"$TF_VAR_ID_COMMIT_SHA\", \"attributes\": { \"value\":\"$(git rev-parse --short "$GITHUB_SHA")\" }, \"type\":\"vars\" }}" \
          https://app.terraform.io/api/v2/workspaces/$TF_WORKSPACE_ID/vars/$TF_VAR_ID_COMMIT_SHA

  edu:
    name: Build and Store Edu Frontend Docker Image in Google Docker Repo
    uses: ./.github/workflows/build-and-store-docker-image.yml
    with:
      DOCKERFILE_FOLDER: frontend-nx/apps/edu-hub
      IMAGE_NAME: frontend
      BRANCH: ${{ github.ref_name }}
      PROJECT_ID: eduhub-staging-new
      NEXT_PUBLIC_API_URL: "https://hasura-staging.opencampus.sh/v1/graphql"
      NEXT_PUBLIC_AUTH_URL: "https://keycloak-staging.opencampus.sh"
    secrets:
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_EDUHUB_STAGING_KEY }}
      GCP_REGION: ${{ secrets.GCP_REGION }}

  deploy-application:
    name: "Deploy Application Infrastructure"
    needs: [edu, save-commit-sha]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/application
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

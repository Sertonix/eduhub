name: Build and Deploy Frontend Docker Image on Google Cloud

on:   
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - develop
      - github-actions
    
    # only on changes in the frontend folder
    paths:
      - frontend/**
      - .github/workflows/**

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: edu_hub_frontend
  # Project ID given on Google
  PROJECT_ID: edu-hub-staging

jobs:

  build-and-deploy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
      - 
        name: Check out
        uses: actions/checkout@v2
      - 
        id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: $PROJECT_ID
      -
        name: Build Docker image
        run: docker build ./frontend --file ./frontend/Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      -
        name: Login to Google Artifact registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CGP_STAGING_REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}      -
        name: Push Docker Image to Google Artifact Registry
        run: |
          IMAGE_ID=eu.gcr.io/$PROJECT_ID/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - 
        name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          project_id: edu-hub-staging
          image: $IMAGE_ID:$VERSION
          service: frontend
      - 
        name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
        
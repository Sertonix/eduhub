name: Build and Deploy Frontend Docker Image on Google Cloud

on:   
  push:
    # Run only on changes in the following branches
    branches:
      - main
      - github-actions
    
    # Run only on changes in the following folder
    paths:
      - keycloak/**
      - .github/workflows/**

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # Name for the docker image
  IMAGE_NAME: edu_hub_keycloak
  # ID of the project in Google in which the image will be stored and deployed
  PROJECT_ID: edu-hub-production

jobs:

  build-and-deploy:
    name: Build and Deploy to Google Cloud Run
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
      - 
        name: Check Out the Repository Branch
        uses: actions/checkout@v2
      - 
        name: Authenticate to Google Cloud
        id: 'auth'  
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'
          project_id: $PROJECT_ID
      -
        name: Build Docker image
        run: docker build ./keycloak --file ./keycloak/Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      -
        name: Authenticate with Google Cloud Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet
      -
        name: Push Docker Image to Google Artifact Registry
        run: |
          IMAGE_ID=${{ secrets.GCP_REGION }}-docker.pkg.dev/$PROJECT_ID/docker-repo/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - 
        name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          project_id: edu-hub-production
          image: $IMAGE_ID:$VERSION
          service: keycloak
      - 
        name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
        